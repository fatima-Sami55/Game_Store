<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cart - GameVault</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="css/cart-styles.css">
    <link rel="stylesheet" href="css/home.css">
<body>
    <!-- Navbar from home page -->
    <nav class="navbar">
        <a href="/" class="logo">
            <span class="logo-icon">ðŸŽ®</span>
            Game<span>Vault</span>
        </a>
        
        <ul class="nav-links">
            <li><a href="/">Home</a></li>
            <li><a href="/games">Games</a></li>
            <li><a href="/deals">Deals</a></li>
            <li><a href="/support">Support</a></li>
        </ul>
        
        <div class="nav-actions">
            <!-- Cart Icon with Counter -->
            <a href="/cart" class="cart-icon-wrapper">
                <div class="cart-icon active">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                        <circle cx="9" cy="21" r="1"></circle>
                        <circle cx="20" cy="21" r="1"></circle>
                        <path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>
                    </svg>
                    <span class="cart-count" id="cart-count">0</span>
                </div>
            </a>
            
            <div class="auth-buttons">
                <% if (locals.user) { %>
                    <!-- User is logged in, show welcome message and logout button -->
                    <span class="user-welcome">Welcome, <%= user.name %></span>
                    <form action="/logout" method="POST" class="logout-form">
                        <button type="submit" class="btn btn-login">Logout</button>
                    </form>
                <% } else { %>
                    <!-- User is not logged in, show login and register buttons -->
                    <a href="/login" class="btn btn-login">Login</a>
                    <a href="/register" class="btn btn-register">Register</a>
                <% } %>
            </div>
        </div>
        
        <div class="hamburger">
            <div class="line1"></div>
            <div class="line2"></div>
            <div class="line3"></div>
        </div>
    </nav>

    <div class="container">
        <h1 class="page-title">Shopping Cart</h1>

        <div class="cart-container">
            <div class="cart-items" id="cart-items">
                <div class="loading">Loading cart...</div>
            </div>

            <div class="cart-summary" id="cart-summary">
                <h2 class="summary-title">Order Summary</h2>
                <div class="summary-row">
                    <span>Subtotal</span>
                    <span id="subtotal">$0.00</span>
                </div>
                <div class="summary-row">
                    <span>Tax (10%)</span>
                    <span id="tax">$0.00</span>
                </div>
                <div class="summary-total">
                    <span>Total</span>
                    <span id="total">$0.00</span>
                </div>
                <button class="checkout-btn" onclick="checkout()">Proceed to Checkout</button>
            </div>
        </div>
    </div>

    <script>
        // Fetch cart items
        async function fetchCart() {
            try {
                const response = await fetch('/cart/cart');
                const items = await response.json();
                displayCart(items);
                updateSummary(items);
            } catch (error) {
                console.error('Error fetching cart:', error);
                showError('Failed to load cart items');
            }
        }

        // Display cart items
        function displayCart(items) {
            const container = document.getElementById('cart-items');
            
            if (items.length === 0) {
                container.innerHTML = `
                    <div class="empty-cart">
                        <h3>Your cart is empty</h3>
                        <p>Looks like you haven't added any games to your cart yet.</p>
                        <a href="/games" class="continue-shopping">Continue Shopping</a>
                    </div>
                `;
                document.getElementById('cart-summary').style.display = 'none';
                return;
            }

            document.getElementById('cart-summary').style.display = 'block';
            const itemsHTML = items.map(item => `
                <div class="cart-item" data-pid="${item.pid}">
                    <img src="${item.img}" alt="${item.name}" class="item-image">
                    <div class="item-details">
                        <h3>${item.name}</h3>
                        <p class="item-price">$${item.price.toFixed(2)}</p>
                        <div class="item-quantity">
                            <button class="quantity-btn" onclick="updateQuantity(${item.pid}, ${item.quantity - 1})">-</button>
                            <input type="number" class="quantity-input" value="${item.quantity}" min="1" 
                                onchange="updateQuantity(${item.pid}, this.value)">
                            <button class="quantity-btn" onclick="updateQuantity(${item.pid}, ${item.quantity + 1})">+</button>
                        </div>
                    </div>
                    <button class="remove-btn" onclick="removeItem(${item.pid})">&times;</button>
                </div>
            `).join('');

            container.innerHTML = itemsHTML;
        }

        // Update cart summary
        function updateSummary(items) {
            const subtotal = items.reduce((total, item) => total + (item.price * item.quantity), 0);
            const tax = subtotal * 0.1;
            const total = subtotal + tax;

            document.getElementById('subtotal').textContent = `$${subtotal.toFixed(2)}`;
            document.getElementById('tax').textContent = `$${tax.toFixed(2)}`;
            document.getElementById('total').textContent = `$${total.toFixed(2)}`;
        }

        // Update item quantity
        async function updateQuantity(pid, quantity) {
            if (quantity < 1) return;

            try {
                const response = await fetch('/cart/update', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ pid, quantity })
                });

                if (response.ok) {
                    fetchCart();
                    updateCartCount();
                } else {
                    showError('Failed to update quantity');
                }
            } catch (error) {
                console.error('Error updating quantity:', error);
                showError('Failed to update quantity');
            }
        }

        // Remove item from cart
        async function removeItem(pid) {
            try {
                const response = await fetch('/cart/remove', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ pid })
                });

                if (response.ok) {
                    fetchCart();
                    updateCartCount();
                    showSuccess('Item removed from cart');
                } else {
                    showError('Failed to remove item');
                }
            } catch (error) {
                console.error('Error removing item:', error);
                showError('Failed to remove item');
            }
        }

        // Checkout
        function checkout() {
            // Implement checkout logic here
            showSuccess('Checkout functionality coming soon!');
        }

        // Update cart count in navbar
        async function updateCartCount() {
            try {
                const response = await fetch('/cart/cart');
                const items = await response.json();
                const count = items.reduce((total, item) => total + item.quantity, 0);
                document.getElementById('cart-count').textContent = count;
            } catch (error) {
                console.error('Error updating cart count:', error);
            }
        }

        // Show success message
        function showSuccess(message) {
            const alert = document.createElement('div');
            alert.className = 'success-message';
            alert.textContent = message;
            document.querySelector('.container').insertBefore(alert, document.querySelector('.cart-container'));
            setTimeout(() => alert.remove(), 3000);
        }

        // Show error message
        function showError(message) {
            const alert = document.createElement('div');
            alert.className = 'error-message';
            alert.textContent = message;
            document.querySelector('.container').insertBefore(alert, document.querySelector('.cart-container'));
            setTimeout(() => alert.remove(), 3000);
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', () => {
            fetchCart();
            updateCartCount();
        });
    </script>
</body>
</html> 